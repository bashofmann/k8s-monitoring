alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi
    replicas: 2
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - alertmanager.k8s-monitoring.plgrnd.be
    tls:
      - hosts:
          - alertmanager.k8s-monitoring.plgrnd.be
        secretName: alertmanager-tls
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          alertname: Watchdog
        receiver: 'null'
    receivers:
    - name: 'null'

prometheus:
  prometheusSpec:
    retention: 4h
    ruleSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    replicas: 1
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - prometheus.k8s-monitoring.plgrnd.be
    tls:
      - hosts:
          - prometheus.k8s-monitoring.plgrnd.be
        secretName: prometheus-tls

grafana:
  deploymentStrategy:
    type: Recreate
  persistence:
    enabled: true
    size: 1Gi
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.k8s-monitoring.plgrnd.be
    tls:
      - hosts:
          - grafana.k8s-monitoring.plgrnd.be
        secretName: grafana-tls
  grafana.ini:
    users:
      auto_assign_org_role: Editor
    auth:
      disable_login_form: true
    auth.basic:
      enabled: false
    auth.anonymous:
      enabled: true
      org_role: Editor
    analytics:
      check_for_updates: false

prometheusOperator:
  admissionWebhooks:
    enabled: false
  tlsProxy:
    enabled: false
